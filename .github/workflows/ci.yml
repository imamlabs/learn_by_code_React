name: Mini Project CI

on:
  push:
    branches: ["**"]
    # [opsional] batasi trigger hanya bila mini project berubah (ganti path sesuai repo kamu)
    # paths:
    #   - "react-complex-mini-project/**"
    #   - "react-practice-js/**"
  pull_request:
    branches: ["**"]
    # paths:
    #   - "react-complex-mini-project/**"
    #   - "react-practice-js/**"
  workflow_dispatch:

jobs:
  mini-react:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find mini project folder
        id: find-mini
        shell: bash
        run: |
          set -e
          # Cari kandidat folder yang punya package.json
          mapfile -t PKG_JSONS < <(git ls-files "**/package.json" || true)
          BEST=""
          for p in "${PKG_JSONS[@]}"; do
            DIR="$(dirname "$p")"
            NAME="$(node -e "try{console.log(require('./$p').name||'') }catch(e){console.log('')}")"
            HAS_VITE="$(node -e "try{const pj=require('./$p'); const all={...pj.dependencies,...pj.devDependencies}; console.log(all && all.vite ? '1':'');}catch(e){console.log('')}")"
            if [[ "$DIR" == *"react-complex-mini-project"* || "$DIR" == *"react-practice-js"* || "$HAS_VITE" == "1" ]]; then
              BEST="$DIR"
              break
            fi
          done

          if [ -z "$BEST" ]; then
            echo "❌ Mini project tidak ditemukan otomatis."
            echo "Silakan set path manual dengan menambahkan env MINI_DIR di job ini."
            echo "Contoh: MINI_DIR=react-complex-mini-project"
            exit 1
          fi

          echo "dir=$BEST" >> "$GITHUB_OUTPUT"
          echo "✅ Mini project terdeteksi di: $BEST"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ${{ steps.find-mini.outputs.dir }}
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run tests (if script exists)
        working-directory: ${{ steps.find-mini.outputs.dir }}
        shell: bash
        run: |
          node -e "try{const p=require('./package.json'); if(!(p.scripts&&p.scripts.test)) process.exit(2)}catch(e){process.exit(2)}"
          if [ $? -eq 0 ]; then
            npm run -s test
          else
            echo "No test script. Skipping."
          fi

      - name: Build (if script exists)
        working-directory: ${{ steps.find-mini.outputs.dir }}
        shell: bash
        run: |
          node -e "try{const p=require('./package.json'); if(!(p.scripts&&p.scripts.build)) process.exit(2)}catch(e){process.exit(2)}"
          if [ $? -eq 0 ]; then
            npm run -s build
          else
            echo "No build script. Skipping."
          fi

      - name: Upload dist/ (Vite)
        uses: actions/upload-artifact@v4
        with:
          name: mini-dist
          path: ${{ steps.find-mini.outputs.dir }}/dist/**
          if-no-files-found: ignore

      - name: Upload build/ (CRA)
        uses: actions/upload-artifact@v4
        with:
          name: mini-build
          path: ${{ steps.find-mini.outputs.dir }}/build/**
          if-no-files-found: ignore
